<?php
/**
 * @file Define some custom settings for drupal_origins_security during install process.
 */

/**
 * Implements hook_install().
 */
function drupal_origins_security_install() {
  // Get the proper localization function.
  $t = get_t();

  // LOGIN SECURITY SETTINGS.
  variable_set('login_security_track_time', 24);
  variable_set('login_security_host_wrong_count', 5);
  variable_set('login_security_host_wrong_count_hard', 10);
  variable_set('login_security_activity_threshold', 25);
  variable_set('login_security_disable_core_login_error', 1);
  variable_set('login_security_notice_attempts_available', 1);

  // Get super admin user for configure the following parameters:
  $admin_user = db_query('SELECT name FROM {users} WHERE uid = 1')->fetchObject();
  variable_set('login_security_user_blocked_email_user', $admin_user->name);
  variable_set('login_security_login_activity_email_user', $admin_user->name);

  // PASSWORD POLICY SETTINGS.
  // General password policy settings:
  variable_set('password_policy_block', 1);
  variable_set('password_policy_show_restrictions', 1);
  variable_set('password_policy_force_change_reset', 1);

  // Add custom Password Security rules:
  $password_policies = array(
    'Admins policy' => array(
      'name' => 'Admin roles policy',
      'description' => 'password plicy for admin roles',
      'enabled' => 1,
      'policy' => 'a:7:{s:7:"history";s:1:"2";s:10:"complexity";s:1:"4";s:5:"digit";s:1:"1";s:8:"username";s:1:"1";s:11:"punctuation";s:1:"1";s:9:"uppercase";s:1:"1";s:6:"length";s:1:"6";}',
      'expiration' => 90,
      'warning' => 80,
      'weight' => 0,
      'role' => 3,
    ),
    'Autenticated policy' => array(
      'name' => 'Autenticated role policy',
      'description' => 'password plicy for autenticated roles',
      'enabled' => 1,
      'policy' => 'a:1:{s:6:"length";s:1:"6";}',
      'expiration' => 0,
      'weight' => 1,
      'warning' => '',
      'role' => 2,
    ),
  );

  foreach ($password_policies as &$policy) {
    $pid = db_insert('password_policy')
      ->fields(array(
        'name' => $policy['name'],
        'description' => $policy['description'],
        'enabled' => $policy['enabled'],
        'policy' => $policy['policy'],
        'expiration' => !empty($policy['expiration']) ? $policy['expiration'] : 0,
        'warning' => str_replace(' ', '', $policy['warning']),
        'weight' => $policy['weight'],
      ))
      ->execute();

    db_insert('password_policy_role')
      ->fields(array(
        'pid' => $pid,
        'rid' => $policy['role'],
      ))
      ->execute();
    // Notify by watchdog:
    watchdog('password_policy', 'New policy %name created.', array('%name' => $policy['name']),
      WATCHDOG_NOTICE, l($t('edit'), 'admin/config/people/password_policy/' . $pid . '/edit'));
  }

  // AUTOLOGOUT SETTINGS.
  // Enable role timeout for autenticated users:
  variable_set('autologout_role_2', 1);
  variable_set('autologout_role_logout', 1);
}
